# –ì–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª main.py –¥–ª—è Telegram-–±–æ—Ç–∞ —Å–æ —Å—Ç–æ–∫–æ–º –∏ –º—É–ª—å—Ç–∏—é–∑–µ—Ä–æ–º (—Å–æ–≤–º–µ—Å—Ç–∏–º —Å Termux –∏ python-telegram-bot 13.15)
import requests
from bs4 import BeautifulSoup
from telegram import Bot, Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from datetime import datetime
import time
import cloudscraper

# ==== –ù–ê–°–¢–†–û–ô–ö–ò ====
TELEGRAM_BOT_TOKEN = '7707125232:AAEwvQmsDCl-qxxKbz1xwnNWEOlY6NRs7gs'  # ‚Üê –í–°–¢–ê–í–¨ –°–í–û–ô –¢–û–ö–ï–ù –û–¢ BotFather
AUTHORIZED_USERS = set()  # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# ==== –§–£–ù–ö–¶–ò–ò ====

def get_stock():
    """–ü–∞—Ä—Å–∏—Ç —Å—Ç–æ–∫ —Å vulkanvalues.com"""
    try:
        url = 'https://www.vulcanvalues.com/grow-a-garden/stock'
        headers = {'User-Agent': 'Mozilla/5.0'}
        response = requests.get(url, headers=headers, timeout=10)
        soup = BeautifulSoup(response.text, 'html.parser')

        blocks = soup.find_all('div', class_='stock-block')
        stock_text = []

        for block in blocks:
            title = block.find('h2')
            items = block.find_all('li')
            if title and items:
                title_text = title.get_text(strip=True)
                item_lines = [f"‚Ä¢ {li.get_text(strip=True)}" for li in items]
                block_text = f"üõí {title_text}:\n" + "\\n".join(item_lines)
                stock_text.append(block_text)

        return "\\n\\n".join(stock_text)
    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–æ–∫–∞: {e}"

def send_stock_to_users(context: CallbackContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–æ–∫ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    stock = get_stock()
    now = datetime.now().strftime("%H:%M")
    message = f"üïí {now} ‚Äî –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å—Ç–æ–∫ Grow a Garden:\\n\\n{stock}"
    for user_id in AUTHORIZED_USERS:
        context.bot.send_message(chat_id=user_id, text=message)

def start(update: Update, context: CallbackContext):
    """/start ‚Äî –ø–æ–¥–ø–∏—Å–∫–∞"""
    user_id = update.effective_user.id
    AUTHORIZED_USERS.add(user_id)
    update.message.reply_text("‚úÖ –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–æ–∫–∞ Grow a Garden.")

def stop(update: Update, context: CallbackContext):
    """/stop ‚Äî –æ—Ç–ø–∏—Å–∫–∞"""
    user_id = update.effective_user.id
    AUTHORIZED_USERS.discard(user_id)
    update.message.reply_text("‚ùå –¢—ã –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.")

def status(update: Update, context: CallbackContext):
    """/status ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–æ–∫"""
    stock = get_stock()
    now = datetime.now().strftime("%H:%M")
    update.message.reply_text(f"üïí {now} ‚Äî –¢–µ–∫—É—â–∏–π —Å—Ç–æ–∫:\\n\\n{stock}")

# ==== –ó–ê–ü–£–°–ö ====

def main():
    updater = Updater(token=TELEGRAM_BOT_TOKEN, use_context=True)
    dispatcher = updater.dispatcher

    # –ö–æ–º–∞–Ω–¥—ã
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("stop", stop))
    dispatcher.add_handler(CommandHandler("status", status))

    updater.start_polling()

    # –ó–∞–¥–∞—á–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    job_queue = updater.job_queue
    job_queue.set_dispatcher(dispatcher)
    job_queue.start()
    job_queue.run_repeating(send_stock_to_users, interval=300, first=0)

    updater.idle()

if __name__ == '__main__':
    main()
    
